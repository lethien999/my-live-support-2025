import sql from 'mssql';
import dotenv from 'dotenv';

// Load environment variables
dotenv.config({ path: '../env.local' });
dotenv.config();

const config = {
  user: 'thien',
  password: '1909',
  server: 'localhost',
  database: 'live_support',
  options: {
    encrypt: false,
    trustServerCertificate: true,
  },
};

async function seedProductsData() {
  try {
    console.log('üå± Starting to seed products data...');
    
    await sql.connect(config);
    console.log('‚úÖ Connected to SQL Server');

    // 1. Get existing Categories
    console.log('üìÇ Getting existing Categories...');
    const categoriesResult = await sql.query`SELECT CategoryID, CategoryName FROM Categories WHERE IsActive = 1`;
    const categories = categoriesResult.recordset;
    console.log('‚úÖ Categories loaded:', categories.length);

    // 2. Seed Shops
    console.log('üè™ Seeding Shops...');
    const shops = [
      { name: 'MUJI Store H√† N·ªôi', description: 'C·ª≠a h√†ng MUJI t·∫°i H√† N·ªôi', address: '123 Ph·ªë Hu·∫ø, H√† N·ªôi', phone: '024-1234-5678', email: 'hanoi@muji.com' },
      { name: 'MUJI Store TP.HCM', description: 'C·ª≠a h√†ng MUJI t·∫°i TP.HCM', address: '456 Nguy·ªÖn Hu·ªá, Q1, TP.HCM', phone: '028-8765-4321', email: 'hcm@muji.com' },
      { name: 'MUJI Store ƒê√† N·∫µng', description: 'C·ª≠a h√†ng MUJI t·∫°i ƒê√† N·∫µng', address: '789 L√™ Du·∫©n, ƒê√† N·∫µng', phone: '0236-1111-2222', email: 'danang@muji.com' }
    ];

    for (const shop of shops) {
      await sql.query`
        IF NOT EXISTS (SELECT 1 FROM Shops WHERE ShopName = ${shop.name})
        INSERT INTO Shops (ShopName, Description, Address, Phone, Email, IsActive, CreatedAt)
        VALUES (${shop.name}, ${shop.description}, ${shop.address}, ${shop.phone}, ${shop.email}, 1, GETDATE())
      `;
    }
    console.log('‚úÖ Shops seeded');

    // 3. Get existing Shops
    console.log('üè™ Getting existing Shops...');
    const shopsResult = await sql.query`SELECT ShopID, ShopName FROM Shops WHERE IsActive = 1`;
    const shops = shopsResult.recordset;
    console.log('‚úÖ Shops loaded:', shops.length);

    // 4. Seed Products
    console.log('üõçÔ∏è Seeding Products...');
    const products = [
      // Clothing
      {
        name: '√Åo thun cotton c∆° b·∫£n',
        description: '√Åo thun cotton 100% v·ªõi thi·∫øt k·∫ø ƒë∆°n gi·∫£n, tho·∫£i m√°i v√† b·ªÅn b·ªâ',
        longDescription: '√Åo thun cotton ƒë∆∞·ª£c l√†m t·ª´ ch·∫•t li·ªáu cotton 100% cao c·∫•p, v·ªõi thi·∫øt k·∫ø t·ªëi gi·∫£n v√† m√†u s·∫Øc trung t√≠nh. S·∫£n ph·∫©m ph√π h·ª£p cho m·ªçi ho·∫°t ƒë·ªông h√†ng ng√†y, t·ª´ ƒëi l√†m ƒë·∫øn t·∫≠p th·ªÉ thao.',
        price: 299000,
        originalPrice: 399000,
        categoryName: 'Clothing',
        shopName: 'MUJI Store H√† N·ªôi',
        stockQuantity: 100,
        imagePath: 'https://via.placeholder.com/300x300/ffffff/000000?text=√Åo+Thun',
        isActive: 1,
        isFeatured: 1,
        isInStock: 1
      },
      {
        name: 'Qu·∫ßn jeans slim fit',
        description: 'Qu·∫ßn jeans v·ªõi thi·∫øt k·∫ø slim fit hi·ªán ƒë·∫°i, ch·∫•t li·ªáu denim cao c·∫•p',
        longDescription: 'Qu·∫ßn jeans ƒë∆∞·ª£c thi·∫øt k·∫ø v·ªõi ki·ªÉu d√°ng slim fit hi·ªán ƒë·∫°i, ch·∫•t li·ªáu denim cao c·∫•p v·ªõi t·ª∑ l·ªá cotton 98% v√† elastane 2% ƒë·ªÉ t·∫°o ƒë·ªô co gi√£n tho·∫£i m√°i.',
        price: 899000,
        originalPrice: 1199000,
        categoryId: 1,
        shopId: 1,
        stockQuantity: 50,
        imagePath: 'https://via.placeholder.com/300x300/ffffff/000000?text=Qu·∫ßn+Jeans',
        specifications: 'Ch·∫•t li·ªáu: Denim 98% Cotton + 2% Elastane, M√†u: Xanh ƒë·∫≠m, Size: 28-36',
        tags: 'qu·∫ßn jeans, slim fit, denim, cao c·∫•p',
        isActive: 1,
        isFeatured: 1,
        isInStock: 1
      },
      {
        name: '√Åo kho√°c bomber',
        description: '√Åo kho√°c bomber v·ªõi thi·∫øt k·∫ø th·ªÉ thao, ch·∫•t li·ªáu nh·∫π v√† ch·ªëng n∆∞·ªõc',
        longDescription: '√Åo kho√°c bomber ƒë∆∞·ª£c thi·∫øt k·∫ø v·ªõi phong c√°ch th·ªÉ thao hi·ªán ƒë·∫°i, ch·∫•t li·ªáu polyester v√† nylon nh·∫π, c√≥ kh·∫£ nƒÉng ch·ªëng n∆∞·ªõc nh·∫π.',
        price: 1299000,
        originalPrice: 1599000,
        categoryId: 1,
        shopId: 1,
        stockQuantity: 30,
        imagePath: 'https://via.placeholder.com/300x300/ffffff/000000?text=√Åo+Kho√°c',
        specifications: 'Ch·∫•t li·ªáu: Polyester + Nylon, Ch·ªëng n∆∞·ªõc, Size: S, M, L, XL',
        tags: '√°o kho√°c, bomber, th·ªÉ thao, ch·ªëng n∆∞·ªõc',
        isActive: 1,
        isFeatured: 0,
        isInStock: 1
      },

      // Beauty
      {
        name: 'Kem d∆∞·ª°ng ·∫©m t·ª± nhi√™n',
        description: 'Kem d∆∞·ª°ng ·∫©m v·ªõi th√†nh ph·∫ßn t·ª± nhi√™n, ph√π h·ª£p cho m·ªçi lo·∫°i da',
        longDescription: 'Kem d∆∞·ª°ng ·∫©m ƒë∆∞·ª£c chi·∫øt xu·∫•t t·ª´ c√°c th√†nh ph·∫ßn t·ª± nhi√™n nh∆∞ chi·∫øt xu·∫•t t·ª´ hoa c√∫c, vitamin E v√† hyaluronic acid. S·∫£n ph·∫©m kh√¥ng g√¢y k√≠ch ·ª©ng v√† ph√π h·ª£p cho m·ªçi lo·∫°i da.',
        price: 450000,
        originalPrice: 550000,
        categoryId: 2,
        shopId: 1,
        stockQuantity: 80,
        imagePath: 'https://via.placeholder.com/300x300/ffffff/000000?text=Kem+D∆∞·ª°ng',
        specifications: 'Th√†nh ph·∫ßn: Chi·∫øt xu·∫•t t·ª´ thi√™n nhi√™n, Dung t√≠ch: 50ml, Lo·∫°i da: M·ªçi lo·∫°i da',
        tags: 'kem d∆∞·ª°ng, t·ª± nhi√™n, ·∫©m, skincare',
        isActive: 1,
        isFeatured: 1,
        isInStock: 1
      },
      {
        name: 'S·ªØa r·ª≠a m·∫∑t d·ªãu nh·∫π',
        description: 'S·ªØa r·ª≠a m·∫∑t v·ªõi c√¥ng th·ª©c d·ªãu nh·∫π, l√†m s·∫°ch s√¢u m√† kh√¥ng l√†m kh√¥ da',
        longDescription: 'S·ªØa r·ª≠a m·∫∑t ƒë∆∞·ª£c ph√°t tri·ªÉn v·ªõi c√¥ng th·ª©c d·ªãu nh·∫π, c√≥ ƒë·ªô pH 5.5 c√¢n b·∫±ng v·ªõi da t·ª± nhi√™n. S·∫£n ph·∫©m l√†m s·∫°ch s√¢u l·ªó ch√¢n l√¥ng m√† kh√¥ng l√†m kh√¥ da.',
        price: 320000,
        originalPrice: 420000,
        categoryId: 2,
        shopId: 1,
        stockQuantity: 120,
        imagePath: 'https://via.placeholder.com/300x300/ffffff/000000?text=S·ªØa+R·ª≠a+M·∫∑t',
        specifications: 'Dung t√≠ch: 150ml, pH: 5.5, Lo·∫°i da: Da nh·∫°y c·∫£m',
        tags: 's·ªØa r·ª≠a m·∫∑t, d·ªãu nh·∫π, l√†m s·∫°ch, nh·∫°y c·∫£m',
        isActive: 1,
        isFeatured: 0,
        isInStock: 1
      },

      // Home
      {
        name: 'B·ªô ch√©n ƒëƒ©a g·ªëm s·ª©',
        description: 'B·ªô ch√©n ƒëƒ©a g·ªëm s·ª© v·ªõi thi·∫øt k·∫ø t·ªëi gi·∫£n, an to√†n cho s·ª©c kh·ªèe',
        longDescription: 'B·ªô ch√©n ƒëƒ©a ƒë∆∞·ª£c l√†m t·ª´ g·ªëm s·ª© cao c·∫•p, thi·∫øt k·∫ø t·ªëi gi·∫£n v·ªõi m√†u tr·∫Øng tinh khi·∫øt. S·∫£n ph·∫©m an to√†n cho s·ª©c kh·ªèe, d·ªÖ v·ªá sinh v√† b·ªÅn b·ªâ.',
        price: 650000,
        originalPrice: 850000,
        categoryId: 3,
        shopId: 1,
        stockQuantity: 40,
        imagePath: 'https://via.placeholder.com/300x300/ffffff/000000?text=Ch√©n+ƒêƒ©a',
        specifications: 'Ch·∫•t li·ªáu: G·ªëm s·ª© cao c·∫•p, B·ªô: 6 ch√©n + 6 ƒëƒ©a, M√†u: Tr·∫Øng',
        tags: 'ch√©n ƒëƒ©a, g·ªëm s·ª©, t·ªëi gi·∫£n, gia ƒë√¨nh',
        isActive: 1,
        isFeatured: 1,
        isInStock: 1
      },
      {
        name: 'ƒê√®n b√†n LED ti·∫øt ki·ªám ƒëi·ªán',
        description: 'ƒê√®n b√†n LED v·ªõi √°nh s√°ng d·ªãu nh·∫π, ti·∫øt ki·ªám ƒëi·ªán v√† ƒëi·ªÅu ch·ªânh ƒë·ªô s√°ng',
        longDescription: 'ƒê√®n b√†n LED s·ª≠ d·ª•ng c√¥ng ngh·ªá LED ti√™n ti·∫øn, ti·∫øt ki·ªám ƒëi·ªán nƒÉng l√™n ƒë·∫øn 80% so v·ªõi ƒë√®n truy·ªÅn th·ªëng. C√≥ th·ªÉ ƒëi·ªÅu ch·ªânh ƒë·ªô s√°ng v√† m√†u √°nh s√°ng.',
        price: 850000,
        originalPrice: 1050000,
        categoryId: 3,
        shopId: 1,
        stockQuantity: 25,
        imagePath: 'https://via.placeholder.com/300x300/ffffff/000000?text=ƒê√®n+B√†n',
        specifications: 'C√¥ng su·∫•t: 12W LED, ƒêi·ªÅu ch·ªânh ƒë·ªô s√°ng, M√†u √°nh s√°ng: Tr·∫Øng ·∫•m',
        tags: 'ƒë√®n b√†n, LED, ti·∫øt ki·ªám ƒëi·ªán, ƒëi·ªÅu ch·ªânh',
        isActive: 1,
        isFeatured: 0,
        isInStock: 1
      },

      // Electronics
      {
        name: 'Tai nghe kh√¥ng d√¢y',
        description: 'Tai nghe kh√¥ng d√¢y v·ªõi √¢m thanh ch·∫•t l∆∞·ª£ng cao, pin l√¢u',
        longDescription: 'Tai nghe kh√¥ng d√¢y s·ª≠ d·ª•ng c√¥ng ngh·ªá Bluetooth 5.0, √¢m thanh ch·∫•t l∆∞·ª£ng cao v·ªõi driver 10mm. Pin c√≥ th·ªÉ s·ª≠ d·ª•ng li√™n t·ª•c 8 gi·ªù, s·∫°c nhanh v√† ch·ªëng n∆∞·ªõc IPX4.',
        price: 1599000,
        originalPrice: 1999000,
        categoryId: 4,
        shopId: 1,
        stockQuantity: 60,
        imagePath: 'https://via.placeholder.com/300x300/ffffff/000000?text=Tai+Nghe',
        specifications: 'Bluetooth 5.0, Pin: 8 gi·ªù, S·∫°c nhanh, Ch·ªëng n∆∞·ªõc IPX4',
        tags: 'tai nghe, kh√¥ng d√¢y, Bluetooth, √¢m thanh',
        isActive: 1,
        isFeatured: 1,
        isInStock: 1
      },
      {
        name: 'S·∫°c d·ª± ph√≤ng 10000mAh',
        description: 'S·∫°c d·ª± ph√≤ng v·ªõi dung l∆∞·ª£ng l·ªõn, s·∫°c nhanh v√† thi·∫øt k·∫ø nh·ªè g·ªçn',
        longDescription: 'S·∫°c d·ª± ph√≤ng c√≥ dung l∆∞·ª£ng 10000mAh, h·ªó tr·ª£ s·∫°c nhanh QC 3.0 v·ªõi 2 c·ªïng USB. Thi·∫øt k·∫ø nh·ªè g·ªçn, d·ªÖ mang theo v√† c√≥ LED hi·ªÉn th·ªã dung l∆∞·ª£ng pin.',
        price: 750000,
        originalPrice: 950000,
        categoryId: 4,
        shopId: 1,
        stockQuantity: 45,
        imagePath: 'https://via.placeholder.com/300x300/ffffff/000000?text=S·∫°c+D·ª±+Ph√≤ng',
        specifications: 'Dung l∆∞·ª£ng: 10000mAh, S·∫°c nhanh QC 3.0, 2 c·ªïng USB',
        tags: 's·∫°c d·ª± ph√≤ng, pin, s·∫°c nhanh, di ƒë·ªông',
        isActive: 1,
        isFeatured: 0,
        isInStock: 1
      },

      // Accessories
      {
        name: 'T√∫i x√°ch canvas',
        description: 'T√∫i x√°ch canvas v·ªõi thi·∫øt k·∫ø ƒë∆°n gi·∫£n, b·ªÅn b·ªâ v√† ph√π h·ª£p m·ªçi ho·∫°t ƒë·ªông',
        longDescription: 'T√∫i x√°ch ƒë∆∞·ª£c l√†m t·ª´ ch·∫•t li·ªáu canvas cao c·∫•p, thi·∫øt k·∫ø ƒë∆°n gi·∫£n v√† t·ªëi gi·∫£n. C√≥ nhi·ªÅu ngƒÉn ti·ªán l·ª£i, ph√π h·ª£p cho ƒëi l√†m, ƒëi h·ªçc ho·∫∑c du l·ªãch.',
        price: 550000,
        originalPrice: 750000,
        categoryId: 5,
        shopId: 1,
        stockQuantity: 70,
        imagePath: 'https://via.placeholder.com/300x300/ffffff/000000?text=T√∫i+X√°ch',
        specifications: 'Ch·∫•t li·ªáu: Canvas cao c·∫•p, K√≠ch th∆∞·ªõc: 35x40x15cm, M√†u: Be, ƒêen',
        tags: 't√∫i x√°ch, canvas, ƒë∆°n gi·∫£n, b·ªÅn b·ªâ',
        isActive: 1,
        isFeatured: 1,
        isInStock: 1
      },
      {
        name: 'ƒê·ªìng h·ªì ƒëeo tay minimal',
        description: 'ƒê·ªìng h·ªì ƒëeo tay v·ªõi thi·∫øt k·∫ø t·ªëi gi·∫£n, m·∫∑t s·ªë l·ªõn v√† d√¢y da th·∫≠t',
        longDescription: 'ƒê·ªìng h·ªì ƒëeo tay c√≥ thi·∫øt k·∫ø t·ªëi gi·∫£n v·ªõi m·∫∑t s·ªë l·ªõn 40mm, d√¢y da th·∫≠t cao c·∫•p. Pin c√≥ th·ªÉ s·ª≠ d·ª•ng 2 nƒÉm, ch·ªëng n∆∞·ªõc 3ATM v√† c√≥ ƒë√®n LED.',
        price: 1299000,
        originalPrice: 1599000,
        categoryId: 5,
        shopId: 1,
        stockQuantity: 35,
        imagePath: 'https://via.placeholder.com/300x300/ffffff/000000?text=ƒê·ªìng+H·ªì',
        specifications: 'M·∫∑t s·ªë: 40mm, D√¢y: Da th·∫≠t, Pin: 2 nƒÉm, Ch·ªëng n∆∞·ªõc: 3ATM',
        tags: 'ƒë·ªìng h·ªì, minimal, da th·∫≠t, t·ªëi gi·∫£n',
        isActive: 1,
        isFeatured: 0,
        isInStock: 1
      },

      // Books
      {
        name: 'S√°ch thi·∫øt k·∫ø n·ªôi th·∫•t',
        description: 'Tuy·ªÉn t·∫≠p c√°c m·∫´u thi·∫øt k·∫ø n·ªôi th·∫•t hi·ªán ƒë·∫°i v√† t·ªëi gi·∫£n',
        longDescription: 'Cu·ªën s√°ch t·ªïng h·ª£p c√°c m·∫´u thi·∫øt k·∫ø n·ªôi th·∫•t hi·ªán ƒë·∫°i v·ªõi phong c√°ch t·ªëi gi·∫£n. Bao g·ªìm c√°c nguy√™n t·∫Øc thi·∫øt k·∫ø, c√°ch s·ª≠ d·ª•ng m√†u s·∫Øc v√† kh√¥ng gian.',
        price: 180000,
        originalPrice: 250000,
        categoryId: 6,
        shopId: 1,
        stockQuantity: 50,
        imagePath: 'https://via.placeholder.com/300x300/ffffff/000000?text=S√°ch+Thi·∫øt+K·∫ø',
        specifications: 'S·ªë trang: 200 trang, Ng√¥n ng·ªØ: Ti·∫øng Vi·ªát, Kh·ªï: 20x25cm',
        tags: 's√°ch, thi·∫øt k·∫ø, n·ªôi th·∫•t, t·ªëi gi·∫£n',
        isActive: 1,
        isFeatured: 0,
        isInStock: 1
      },

      // Stationery
      {
        name: 'B√∫t gel ƒëen 0.5mm',
        description: 'B√∫t gel v·ªõi ng√≤i 0.5mm, m·ª±c ƒëen ƒë·∫≠m v√† vi·∫øt m∆∞·ª£t m√†',
        longDescription: 'B√∫t gel s·ª≠ d·ª•ng ng√≤i 0.5mm v·ªõi m·ª±c ƒëen ƒë·∫≠m, vi·∫øt m∆∞·ª£t m√† kh√¥ng b·ªã t·∫Øc. Thi·∫øt k·∫ø ergonomic, d·ªÖ c·∫ßm v√† c√≥ th·ªÉ thay ng√≤i.',
        price: 25000,
        originalPrice: 35000,
        categoryId: 7,
        shopId: 1,
        stockQuantity: 200,
        imagePath: 'https://via.placeholder.com/300x300/ffffff/000000?text=B√∫t+Gel',
        specifications: 'Ng√≤i: 0.5mm, M√†u m·ª±c: ƒêen, Thi·∫øt k·∫ø: Ergonomic',
        tags: 'b√∫t gel, ng√≤i 0.5mm, m·ª±c ƒëen, ergonomic',
        isActive: 1,
        isFeatured: 0,
        isInStock: 1
      },

      // Food
      {
        name: 'Tr√† xanh Nh·∫≠t B·∫£n',
        description: 'Tr√† xanh cao c·∫•p nh·∫≠p kh·∫©u t·ª´ Nh·∫≠t B·∫£n, h∆∞∆°ng v·ªã t·ª± nhi√™n',
        longDescription: 'Tr√† xanh ƒë∆∞·ª£c nh·∫≠p kh·∫©u tr·ª±c ti·∫øp t·ª´ Nh·∫≠t B·∫£n, ƒë∆∞·ª£c ch·∫ø bi·∫øn theo ph∆∞∆°ng ph√°p truy·ªÅn th·ªëng. C√≥ h∆∞∆°ng v·ªã t·ª± nhi√™n, kh√¥ng ch·ª©a ch·∫•t b·∫£o qu·∫£n.',
        price: 120000,
        originalPrice: 150000,
        categoryId: 8,
        shopId: 1,
        stockQuantity: 100,
        imagePath: 'https://via.placeholder.com/300x300/ffffff/000000?text=Tr√†+Xanh',
        specifications: 'Xu·∫•t x·ª©: Nh·∫≠t B·∫£n, Tr·ªçng l∆∞·ª£ng: 100g, ƒê√≥ng g√≥i: H·ªôp thi·∫øc',
        tags: 'tr√† xanh, Nh·∫≠t B·∫£n, t·ª± nhi√™n, cao c·∫•p',
        isActive: 1,
        isFeatured: 1,
        isInStock: 1
      }
    ];

    for (const product of products) {
      await sql.query`
        IF NOT EXISTS (SELECT 1 FROM Products WHERE ProductName = ${product.name})
        INSERT INTO Products (
          ProductName, Description, LongDescription, Price, OriginalPrice,
          CategoryID, ShopID, StockQuantity, ImagePath, IsActive, IsFeatured, IsInStock, CreatedAt
        )
        VALUES (
          ${product.name}, ${product.description}, ${product.longDescription},
          ${product.price}, ${product.originalPrice}, ${product.categoryId},
          ${product.shopId}, ${product.stockQuantity}, ${product.imagePath},
          ${product.isActive}, ${product.isFeatured}, ${product.isInStock}, GETDATE()
        )
      `;
    }
    console.log('‚úÖ Products seeded');

    // 4. Seed Reviews
    console.log('‚≠ê Seeding Reviews...');
    const reviews = [
      { productId: 1, customerId: 3, rating: 5, comment: '√Åo r·∫•t ƒë·∫πp v√† ch·∫•t l∆∞·ª£ng t·ªët!' },
      { productId: 1, customerId: 3, rating: 4, comment: 'Ch·∫•t li·ªáu cotton m·ªÅm m·∫°i, tho·∫£i m√°i khi m·∫∑c' },
      { productId: 2, customerId: 3, rating: 5, comment: 'Qu·∫ßn jeans v·ª´a v·∫∑n, ch·∫•t l∆∞·ª£ng denim t·ªët' },
      { productId: 4, customerId: 3, rating: 5, comment: 'Kem d∆∞·ª°ng ·∫©m r·∫•t hi·ªáu qu·∫£, da m·ªÅm m·ªãn' },
      { productId: 8, customerId: 3, rating: 4, comment: 'Tai nghe √¢m thanh hay, pin l√¢u' },
      { productId: 10, customerId: 3, rating: 5, comment: 'T√∫i x√°ch ƒë·∫πp v√† b·ªÅn, thi·∫øt k·∫ø t·ªëi gi·∫£n' }
    ];

    for (const review of reviews) {
      await sql.query`
        INSERT INTO Reviews (ProductID, CustomerID, Rating, Comment, CreatedAt)
        VALUES (${review.productId}, ${review.customerId}, ${review.rating}, ${review.comment}, GETDATE())
      `;
    }
    console.log('‚úÖ Reviews seeded');

    // 5. Update Product Ratings
    console.log('üìä Updating Product Ratings...');
    await sql.query`
      UPDATE Products 
      SET AverageRating = (
        SELECT AVG(CAST(Rating AS FLOAT))
        FROM Reviews 
        WHERE Reviews.ProductID = Products.ProductID
      ),
      ReviewCount = (
        SELECT COUNT(*)
        FROM Reviews 
        WHERE Reviews.ProductID = Products.ProductID
      )
      WHERE ProductID IN (SELECT DISTINCT ProductID FROM Reviews)
    `;
    console.log('‚úÖ Product ratings updated');

    // 6. Seed Shopping Cart Items
    console.log('üõí Seeding Shopping Cart Items...');
    const cartItems = [
      { customerId: 3, productId: 1, quantity: 2 },
      { customerId: 3, productId: 4, quantity: 1 },
      { customerId: 3, productId: 8, quantity: 1 }
    ];

    for (const item of cartItems) {
      await sql.query`
        IF NOT EXISTS (SELECT 1 FROM ShoppingCart WHERE CustomerID = ${item.customerId} AND ProductID = ${item.productId})
        INSERT INTO ShoppingCart (CustomerID, ProductID, Quantity, CreatedAt)
        VALUES (${item.customerId}, ${item.productId}, ${item.quantity}, GETDATE())
      `;
    }
    console.log('‚úÖ Shopping cart items seeded');

    // 7. Seed Orders
    console.log('üì¶ Seeding Orders...');
    const orders = [
      {
        customerId: 3,
        orderNumber: 'ORD-2025-001',
        status: 'Delivered',
        totalAmount: 748000,
        shippingAddress: '123 ƒê∆∞·ªùng ABC, Qu·∫≠n 1, TP.HCM',
        paymentMethod: 'Credit Card',
        paymentStatus: 'Paid',
        shippingStatus: 'Delivered'
      },
      {
        customerId: 3,
        orderNumber: 'ORD-2025-002',
        status: 'Processing',
        totalAmount: 1299000,
        shippingAddress: '456 ƒê∆∞·ªùng XYZ, Qu·∫≠n 2, TP.HCM',
        paymentMethod: 'Bank Transfer',
        paymentStatus: 'Pending',
        shippingStatus: 'Preparing'
      }
    ];

    for (const order of orders) {
      const orderResult = await sql.query`
        INSERT INTO Orders (
          CustomerID, OrderNumber, Status, TotalAmount, ShippingAddress,
          PaymentMethod, PaymentStatus, ShippingStatus, CreatedAt
        )
        OUTPUT INSERTED.OrderID
        VALUES (
          ${order.customerId}, ${order.orderNumber}, ${order.status},
          ${order.totalAmount}, ${order.shippingAddress}, ${order.paymentMethod},
          ${order.paymentStatus}, ${order.shippingStatus}, GETDATE()
        )
      `;
      
      const orderId = orderResult.recordset[0].OrderID;
      
      // Add order items
      if (order.orderNumber === 'ORD-2025-001') {
        await sql.query`
          INSERT INTO OrderItems (OrderID, ProductID, Quantity, Price, CreatedAt)
          VALUES 
            (${orderId}, 1, 2, 299000, GETDATE()),
            (${orderId}, 4, 1, 450000, GETDATE())
        `;
      } else if (order.orderNumber === 'ORD-2025-002') {
        await sql.query`
          INSERT INTO OrderItems (OrderID, ProductID, Quantity, Price, CreatedAt)
          VALUES (${orderId}, 8, 1, 1299000, GETDATE())
        `;
      }
    }
    console.log('‚úÖ Orders seeded');

    console.log('üéâ All data seeded successfully!');
    console.log('üìä Summary:');
    console.log(`   - Categories: ${categories.length}`);
    console.log(`   - Shops: ${shops.length}`);
    console.log(`   - Products: ${products.length}`);
    console.log(`   - Reviews: ${reviews.length}`);
    console.log(`   - Cart Items: ${cartItems.length}`);
    console.log(`   - Orders: ${orders.length}`);

  } catch (error) {
    console.error('‚ùå Error seeding data:', error);
  } finally {
    console.log('‚úÖ Database connection closed');
  }
}

// Run the seed function
seedProductsData().catch(console.error);
