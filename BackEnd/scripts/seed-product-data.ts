import DatabaseService from '../src/services/database.service';

async function seedProductData() {
  try {
    console.log('üå± Seeding Product Data...');
    
    const db = DatabaseService.getInstance();
    await db.connect();
    
    // Clear existing data
    console.log('\nüßπ Clearing existing data...');
    await db.query('DELETE FROM Reviews');
    await db.query('DELETE FROM Products');
    await db.query('DELETE FROM Categories');
    console.log('‚úÖ Existing data cleared');
    
    // Insert Categories
    console.log('\nüìÇ Inserting Categories...');
    const categories = [
      {
        CategoryName: 'Clothing',
        Description: 'Th·ªùi trang nam n·ªØ v·ªõi thi·∫øt k·∫ø ƒë∆°n gi·∫£n v√† ch·∫•t l∆∞·ª£ng cao',
        ParentCategoryID: null,
        IsActive: true
      },
      {
        CategoryName: 'Beauty',
        Description: 'M·ªπ ph·∫©m v√† chƒÉm s√≥c da v·ªõi th√†nh ph·∫ßn t·ª± nhi√™n',
        ParentCategoryID: null,
        IsActive: true
      },
      {
        CategoryName: 'Home',
        Description: 'ƒê·ªì d√πng gia ƒë√¨nh v√† n·ªôi th·∫•t v·ªõi thi·∫øt k·∫ø t·ªëi gi·∫£n',
        ParentCategoryID: null,
        IsActive: true
      },
      {
        CategoryName: 'Electronics',
        Description: 'Thi·∫øt b·ªã ƒëi·ªán t·ª≠ v√† c√¥ng ngh·ªá ti·ªán √≠ch',
        ParentCategoryID: null,
        IsActive: true
      },
      {
        CategoryName: 'Accessories',
        Description: 'Ph·ª• ki·ªán th·ªùi trang v√† ƒë·ªì d√πng c√° nh√¢n',
        ParentCategoryID: null,
        IsActive: true
      }
    ];
    
    for (const category of categories) {
      await db.query(`
        INSERT INTO Categories (CategoryName, Description, ParentCategoryID, IsActive, CreatedAt, UpdatedAt)
        VALUES (@categoryName, @description, @parentCategoryId, @isActive, @createdAt, @updatedAt)
      `, {
        categoryName: category.CategoryName,
        description: category.Description,
        parentCategoryId: category.ParentCategoryID,
        isActive: category.IsActive,
        createdAt: new Date(),
        updatedAt: new Date()
      });
    }
    console.log('‚úÖ Categories inserted');
    
    // Get category IDs
    const categoryData = await db.query('SELECT CategoryID, CategoryName FROM Categories');
    const categoryMap = categoryData.reduce((acc: any, cat: any) => {
      acc[cat.CategoryName] = cat.CategoryID;
      return acc;
    }, {});
    
    // Insert Products
    console.log('\nüì¶ Inserting Products...');
    const products = [
      // Clothing
      {
        ProductName: '√Åo thun cotton c∆° b·∫£n',
        Description: '√Åo thun cotton 100% v·ªõi thi·∫øt k·∫ø ƒë∆°n gi·∫£n, tho·∫£i m√°i v√† b·ªÅn b·ªâ. Ph√π h·ª£p cho m·ªçi ho·∫°t ƒë·ªông h√†ng ng√†y.',
        Price: 299000,
        CategoryID: categoryMap['Clothing'],
        SKU: 'MUJI-TSHIRT-001',
        StockQuantity: 100,
        IsActive: true,
        IsFeatured: true,
        Specifications: 'Ch·∫•t li·ªáu: Cotton 100%, M√†u s·∫Øc: Tr·∫Øng, ƒêen, X√°m, Size: S, M, L, XL',
        Tags: '√°o thun, cotton, c∆° b·∫£n, ƒë∆°n gi·∫£n'
      },
      {
        ProductName: 'Qu·∫ßn jeans slim fit',
        Description: 'Qu·∫ßn jeans v·ªõi thi·∫øt k·∫ø slim fit hi·ªán ƒë·∫°i, ch·∫•t li·ªáu denim cao c·∫•p, co gi√£n t·ªët.',
        Price: 899000,
        CategoryID: categoryMap['Clothing'],
        SKU: 'MUJI-JEANS-001',
        StockQuantity: 50,
        IsActive: true,
        IsFeatured: true,
        Specifications: 'Ch·∫•t li·ªáu: Denim 98% Cotton + 2% Elastane, M√†u: Xanh ƒë·∫≠m, Size: 28-36',
        Tags: 'qu·∫ßn jeans, slim fit, denim, cao c·∫•p'
      },
      {
        ProductName: '√Åo kho√°c bomber',
        Description: '√Åo kho√°c bomber v·ªõi thi·∫øt k·∫ø th·ªÉ thao, ch·∫•t li·ªáu nh·∫π v√† ch·ªëng n∆∞·ªõc.',
        Price: 1299000,
        CategoryID: categoryMap['Clothing'],
        SKU: 'MUJI-BOMBER-001',
        StockQuantity: 30,
        IsActive: true,
        IsFeatured: false,
        Specifications: 'Ch·∫•t li·ªáu: Polyester + Nylon, Ch·ªëng n∆∞·ªõc, Size: S, M, L, XL',
        Tags: '√°o kho√°c, bomber, th·ªÉ thao, ch·ªëng n∆∞·ªõc'
      },
      
      // Beauty
      {
        ProductName: 'Kem d∆∞·ª°ng ·∫©m t·ª± nhi√™n',
        Description: 'Kem d∆∞·ª°ng ·∫©m v·ªõi th√†nh ph·∫ßn t·ª± nhi√™n, ph√π h·ª£p cho m·ªçi lo·∫°i da, kh√¥ng g√¢y k√≠ch ·ª©ng.',
        Price: 450000,
        CategoryID: categoryMap['Beauty'],
        SKU: 'MUJI-MOISTURIZER-001',
        StockQuantity: 80,
        IsActive: true,
        IsFeatured: true,
        Specifications: 'Th√†nh ph·∫ßn: Chi·∫øt xu·∫•t t·ª´ thi√™n nhi√™n, Dung t√≠ch: 50ml, Lo·∫°i da: M·ªçi lo·∫°i da',
        Tags: 'kem d∆∞·ª°ng, t·ª± nhi√™n, ·∫©m, skincare'
      },
      {
        ProductName: 'S·ªØa r·ª≠a m·∫∑t d·ªãu nh·∫π',
        Description: 'S·ªØa r·ª≠a m·∫∑t v·ªõi c√¥ng th·ª©c d·ªãu nh·∫π, l√†m s·∫°ch s√¢u m√† kh√¥ng l√†m kh√¥ da.',
        Price: 320000,
        CategoryID: categoryMap['Beauty'],
        SKU: 'MUJI-CLEANSER-001',
        StockQuantity: 120,
        IsActive: true,
        IsFeatured: false,
        Specifications: 'Dung t√≠ch: 150ml, pH: 5.5, Lo·∫°i da: Da nh·∫°y c·∫£m',
        Tags: 's·ªØa r·ª≠a m·∫∑t, d·ªãu nh·∫π, l√†m s·∫°ch, nh·∫°y c·∫£m'
      },
      
      // Home
      {
        ProductName: 'B·ªô ch√©n ƒëƒ©a g·ªëm s·ª©',
        Description: 'B·ªô ch√©n ƒëƒ©a g·ªëm s·ª© v·ªõi thi·∫øt k·∫ø t·ªëi gi·∫£n, an to√†n cho s·ª©c kh·ªèe, d·ªÖ v·ªá sinh.',
        Price: 650000,
        CategoryID: categoryMap['Home'],
        SKU: 'MUJI-CERAMIC-001',
        StockQuantity: 40,
        IsActive: true,
        IsFeatured: true,
        Specifications: 'Ch·∫•t li·ªáu: G·ªëm s·ª© cao c·∫•p, B·ªô: 6 ch√©n + 6 ƒëƒ©a, M√†u: Tr·∫Øng',
        Tags: 'ch√©n ƒëƒ©a, g·ªëm s·ª©, t·ªëi gi·∫£n, gia ƒë√¨nh'
      },
      {
        ProductName: 'ƒê√®n b√†n LED ti·∫øt ki·ªám ƒëi·ªán',
        Description: 'ƒê√®n b√†n LED v·ªõi √°nh s√°ng d·ªãu nh·∫π, ti·∫øt ki·ªám ƒëi·ªán, ƒëi·ªÅu ch·ªânh ƒë·ªô s√°ng.',
        Price: 850000,
        CategoryID: categoryMap['Home'],
        SKU: 'MUJI-LED-LAMP-001',
        StockQuantity: 25,
        IsActive: true,
        IsFeatured: false,
        Specifications: 'C√¥ng su·∫•t: 12W LED, ƒêi·ªÅu ch·ªânh ƒë·ªô s√°ng, M√†u √°nh s√°ng: Tr·∫Øng ·∫•m',
        Tags: 'ƒë√®n b√†n, LED, ti·∫øt ki·ªám ƒëi·ªán, ƒëi·ªÅu ch·ªânh'
      },
      
      // Electronics
      {
        ProductName: 'Tai nghe kh√¥ng d√¢y',
        Description: 'Tai nghe kh√¥ng d√¢y v·ªõi √¢m thanh ch·∫•t l∆∞·ª£ng cao, pin l√¢u, k·∫øt n·ªëi Bluetooth 5.0.',
        Price: 1599000,
        CategoryID: categoryMap['Electronics'],
        SKU: 'MUJI-EARBUDS-001',
        StockQuantity: 60,
        IsActive: true,
        IsFeatured: true,
        Specifications: 'Bluetooth 5.0, Pin: 8 gi·ªù, S·∫°c nhanh, Ch·ªëng n∆∞·ªõc IPX4',
        Tags: 'tai nghe, kh√¥ng d√¢y, Bluetooth, √¢m thanh'
      },
      {
        ProductName: 'S·∫°c d·ª± ph√≤ng 10000mAh',
        Description: 'S·∫°c d·ª± ph√≤ng v·ªõi dung l∆∞·ª£ng l·ªõn, s·∫°c nhanh, thi·∫øt k·∫ø nh·ªè g·ªçn.',
        Price: 750000,
        CategoryID: categoryMap['Electronics'],
        SKU: 'MUJI-POWERBANK-001',
        StockQuantity: 45,
        IsActive: true,
        IsFeatured: false,
        Specifications: 'Dung l∆∞·ª£ng: 10000mAh, S·∫°c nhanh QC 3.0, 2 c·ªïng USB',
        Tags: 's·∫°c d·ª± ph√≤ng, pin, s·∫°c nhanh, di ƒë·ªông'
      },
      
      // Accessories
      {
        ProductName: 'T√∫i x√°ch canvas',
        Description: 'T√∫i x√°ch canvas v·ªõi thi·∫øt k·∫ø ƒë∆°n gi·∫£n, b·ªÅn b·ªâ, ph√π h·ª£p cho m·ªçi ho·∫°t ƒë·ªông.',
        Price: 550000,
        CategoryID: categoryMap['Accessories'],
        SKU: 'MUJI-CANVAS-BAG-001',
        StockQuantity: 70,
        IsActive: true,
        IsFeatured: true,
        Specifications: 'Ch·∫•t li·ªáu: Canvas cao c·∫•p, K√≠ch th∆∞·ªõc: 35x40x15cm, M√†u: Be, ƒêen',
        Tags: 't√∫i x√°ch, canvas, ƒë∆°n gi·∫£n, b·ªÅn b·ªâ'
      },
      {
        ProductName: 'ƒê·ªìng h·ªì ƒëeo tay minimal',
        Description: 'ƒê·ªìng h·ªì ƒëeo tay v·ªõi thi·∫øt k·∫ø t·ªëi gi·∫£n, m·∫∑t s·ªë l·ªõn, d√¢y da th·∫≠t.',
        Price: 1299000,
        CategoryID: categoryMap['Accessories'],
        SKU: 'MUJI-WATCH-001',
        StockQuantity: 35,
        IsActive: true,
        IsFeatured: false,
        Specifications: 'M·∫∑t s·ªë: 40mm, D√¢y: Da th·∫≠t, Pin: 2 nƒÉm, Ch·ªëng n∆∞·ªõc: 3ATM',
        Tags: 'ƒë·ªìng h·ªì, minimal, da th·∫≠t, t·ªëi gi·∫£n'
      }
    ];
    
    for (const product of products) {
      await db.query(`
        INSERT INTO Products (
          ProductName, Description, Price, CategoryID, SKU, StockQuantity, 
          IsActive, IsFeatured, Specifications, Tags, CreatedAt, UpdatedAt
        ) VALUES (
          @productName, @description, @price, @categoryId, @sku, @stockQuantity,
          @isActive, @isFeatured, @specifications, @tags, @createdAt, @updatedAt
        )
      `, {
        productName: product.ProductName,
        description: product.Description,
        price: product.Price,
        categoryId: product.CategoryID,
        sku: product.SKU,
        stockQuantity: product.StockQuantity,
        isActive: product.IsActive,
        isFeatured: product.IsFeatured,
        specifications: product.Specifications,
        tags: product.Tags,
        createdAt: new Date(),
        updatedAt: new Date()
      });
    }
    console.log('‚úÖ Products inserted');
    
    // Insert Sample Reviews
    console.log('\n‚≠ê Inserting Sample Reviews...');
    const reviews = [
      {
        ProductID: 1,
        CustomerID: 3,
        Rating: 5,
        Comment: '√Åo thun r·∫•t m·ªÅm m·∫°i v√† tho·∫£i m√°i. Ch·∫•t l∆∞·ª£ng t·ªët, gi√° h·ª£p l√Ω.',
        IsVerified: true
      },
      {
        ProductID: 1,
        CustomerID: 3,
        Rating: 4,
        Comment: 'Thi·∫øt k·∫ø ƒë∆°n gi·∫£n nh∆∞ng ƒë·∫πp. Ch·∫•t li·ªáu cotton t·ªët.',
        IsVerified: true
      },
      {
        ProductID: 4,
        CustomerID: 3,
        Rating: 5,
        Comment: 'Kem d∆∞·ª°ng ·∫©m r·∫•t t·ªët, da m√¨nh kh√¥ng b·ªã k√≠ch ·ª©ng.',
        IsVerified: true
      },
      {
        ProductID: 7,
        CustomerID: 3,
        Rating: 4,
        Comment: 'B·ªô ch√©n ƒëƒ©a ƒë·∫πp v√† ch·∫•t l∆∞·ª£ng t·ªët. Thi·∫øt k·∫ø t·ªëi gi·∫£n.',
        IsVerified: true
      }
    ];
    
    for (const review of reviews) {
      await db.query(`
        INSERT INTO Reviews (ProductID, CustomerID, Rating, Comment, IsVerified, CreatedAt)
        VALUES (@productId, @customerId, @rating, @comment, @isVerified, @createdAt)
      `, {
        productId: review.ProductID,
        customerId: review.CustomerID,
        rating: review.Rating,
        comment: review.Comment,
        isVerified: review.IsVerified,
        createdAt: new Date()
      });
    }
    console.log('‚úÖ Reviews inserted');
    
    // Verify data
    console.log('\nüìä Verifying data...');
    const categoryCount = await db.query('SELECT COUNT(*) as count FROM Categories');
    const productCount = await db.query('SELECT COUNT(*) as count FROM Products');
    const reviewCount = await db.query('SELECT COUNT(*) as count FROM Reviews');
    
    console.log(`‚úÖ Categories: ${categoryCount[0].count}`);
    console.log(`‚úÖ Products: ${productCount[0].count}`);
    console.log(`‚úÖ Reviews: ${reviewCount[0].count}`);
    
    console.log('\nüéâ Product data seeding completed successfully!');
    
  } catch (error) {
    console.error('‚ùå Error seeding product data:', error);
  }
}

seedProductData();
